const a = ['some', '---\x20loading:\x20replace.js', 'all\x20words\x20have\x20been\x20cleared', 'includes', 'roam', '\x22\x20has\x20been\x20removed', 'map', 'enter\x20a\x20word\x20to\x20replace\x20\x22', 'filter', 'search\x20results\x20for\x20\x22', '\x22\x20has\x20been\x20replaced\x20with\x20\x22', '\x22\x20does\x20not\x20exist', 'enter\x20a\x20search\x20query:', 'toad', '\x22\x20has\x20been\x20added', 'log', '\x22\x20exists', 'add\x20a\x20new\x20word:', 'all\x20words', '---\x20loading:\x20remove.js', '---\x20loading:\x20clear-all.js', 'road', 'push', 'reduce', 'use\x20strict', 'enter\x20a\x20word\x20to\x20remove:', '---\x20loading:\x20search.js', '---\x20loading:\x20display-all.js', 'find\x20if\x20a\x20word\x20exists:']; (function (b, e) { const f = function (g) { while (--g) { b['push'](b['shift']()); } }; f(++e); }(a, 0x1e9)); const b = function (c, d) { c = c - 0x0; let e = a[c]; return e; }; let words = [b('0x11'), b('0x19'), b('0x8')]; b('0x1c'); console[b('0x13')]('---\x20loading:\x20add-word.js'); const addWordHandler = () => { const c = prompt(b('0x15')); if (c === null) return; words[b('0x1a')](c); const d = '\x22' + c + b('0x12'); displayHandler(d); }; b('0x1c'); console[b('0x13')](b('0x18')); const clearAllHandler = () => { words = []; alert(b('0x6')); }; b('0x1c'); console[b('0x13')](b('0x2')); const displayHandler = (c = b('0x16'), d = words) => { const e = (g, h) => { return g + '\x0a' + h; }, f = d[b('0x1b')](e, c + ':'); alert(f); }; b('0x1c'); console[b('0x13')]('---\x20loading:\x20exists.js'); const existsHandler = () => { const c = prompt(b('0x3')); if (c === null) return; const d = words[b('0x4')](e => e === c); d ? alert('\x22' + c + b('0x14')) : alert('\x22' + c + b('0xf')); }; 'use\x20strict'; console[b('0x13')](b('0x17')); const removeHandler = () => { const c = prompt(b('0x0')); if (c === null) return; const d = f => { return f === c; }, e = words[b('0x4')](d); if (e) { const f = g => { return g !== c; }; words = words[b('0xc')](f), displayHandler('\x22' + c + b('0x9')); } else alert('\x22' + c + b('0xf')); }; b('0x1c'); console[b('0x13')](b('0x5')); const replaceHandler = () => { const c = prompt('enter\x20the\x20word\x20to\x20replace:'); if (c === null) return; const d = words[b('0x4')](f => f === c); if (!d) { alert('\x22' + c + b('0xf')); return; } const e = prompt(b('0xb') + c + '\x22:'); if (c === null) return; words = words[b('0xa')](f => f === c ? e : f); displayHandler('\x22' + c + b('0xe') + e + '\x22'); }; 'use\x20strict'; console[b('0x13')](b('0x1')); const searchHandler = () => { const c = prompt(b('0x10')); if (c === null) return; const d = words[b('0xc')](e => e[b('0x7')](c)); displayHandler(b('0xd') + c + '\x22', d); };
